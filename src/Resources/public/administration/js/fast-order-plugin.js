(function(){"use strict";var e={};e.p="bundles/fastorderplugin/",window?.__sw__?.assetPath&&(e.p=window.__sw__.assetPath+"/bundles/fastorderplugin/"),function(){let{Component:e,Mixin:t}=Shopware,{Criteria:n}=Shopware.Data;e.register("fast-order-list",{template:'{% block fast_order_list %}\n    <sw-page class="fast-order-list">\n\n        {% block fast_order_list_content %}\n        <template #content>\n            {% block fast_order_list_content_slot %}\n            <div class="fast-order-list-content">\n                {% block fast_order_list_grid %}\n                <sw-data-grid\n                    ref="fastOrderGrid"\n                    identifier="fast-order-list"\n                    :data-source="fastOrders"\n                    :columns="fastOrderColumns"\n                    :is-loading="isLoading"\n                    :full-page="true"\n                >\n\n                {% block fast_order_list_grid_columns %}\n\n                    {% block fast_order_list_grid_columns_actions %}\n                    <template #actions="{ item }">\n\n                        {% block fast_order_list_grid_columns_actions_detail %}\n                        <sw-context-menu-item :router-link="{ name: \'fast.order.detail\', params: { id: item.id } }">\n                            {{ $tc(\'fast-order.list.contextMenuEdit\') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                        {% block fast_order_list_grid_columns_actions_delete %}\n                        <sw-context-menu-item variant="danger" @click="onDelete(item.id)">\n                            {{ $tc(\'fast-order.list.contextMenuDelete\') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                    </template>\n                    {% endblock %}\n\n                    {% block fast_order_list_grid_action_modals %}\n                    <template #action-modals="{ item }">\n                        {% block fast_order_list_delete_modal %}\n                        <sw-modal\n                            v-if="showDeleteModal === item.id"\n                            :title="$tc(\'global.default.warning\')"\n                            variant="small"\n                            @modal-close="onCloseDeleteModal"\n                        >\n                            {% block fast_order_list_delete_modal_confirm_delete_text %}\n                            <p class="fast-order-list__confirm-delete-text">\n                                {{ $tc(\'fast-order.list.textDeleteConfirm\', 0, { product : `${item.product}` }) }}\n                            </p>\n                            {% endblock %}\n\n                            {% block fast_order_list_delete_modal_footer %}\n                            <template #modal-footer>\n                                {% block sw_order_list_delete_modal_cancel %}\n                                <sw-button\n                                    size="small"\n                                    @click="onCloseDeleteModal"\n                                >\n                                    {{ $tc(\'fast-order.list.buttonCancel\') }}\n                                </sw-button>\n                                {% endblock %}\n\n                                {% block fast_order_list_delete_modal_confirm %}\n                                <sw-button\n                                    variant="danger"\n                                    size="small"\n                                    @click="onConfirmDelete(item.id)"\n                                >\n                                    {{ $tc(\'fast-order.list.buttonDelete\') }}\n                                </sw-button>\n                                {% endblock %}\n                            </template>\n                            {% endblock %}\n                        </sw-modal>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n\n                {% endblock %}\n\n                </sw-data-grid>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n\n',inject:["repositoryFactory"],data(){return{fastOrders:[],fastOrderColumns:[{property:"product",label:"Product"},{property:"quantity",label:"Quantity"},{property:"session",label:"Session"},{property:"created_at",label:"Created"},{property:"updated_at",label:"Updated"},{property:"comment",label:"Comment"}],isLoading:!1,showDeleteModal:!1}},computed:{fastOrderRepository(){return this.repositoryFactory.create("fast_order")}},created(){this.getFastOrders()},methods:{getFastOrders:function(){this.fastOrderRepository.search(new n,Shopware.Context.api).then(e=>{this.fastOrders=e})},onDelete(e){this.showDeleteModal=e},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(e){return this.showDeleteModal=!1,this.fastOrderRepository.delete(e).then(()=>{this.getFastOrders()})}},metaInfo(){return{title:this.$createTitle()}}});let{Component:r,Mixin:s}=Shopware,{Criteria:a}=Shopware.Data;r.register("fast-order-detail",{template:'{% block fast_order_detail %}\n    <sw-page class="fast-order-detail">\n\n    {% block fast_order_detail_smart_bar_actions %}\n    <template #smart-bar-actions>\n\n        {% block fast_order_detail_smart_bar_actions_cancel %}\n        <sw-button\n            :disabled="isLoading"\n            @click="onCancel"\n        >\n            {{ $tc(\'fast-order.detail.buttonCancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block fast_order_detail_smart_bar_actions_save %}\n        <sw-button-process\n            :is-loading="isLoading"\n            :process-success="isSaveSuccessful"\n            variant="primary"\n            @update:process-success="saveFinish"\n            @click.prevent="onSave"\n        >\n            {{ $tc(\'fast-order.detail.buttonSave\') }}\n        </sw-button-process>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block fast_order_detail_content %}\n    <template #content>\n\n        <sw-card-view>\n            {% block fast_order_detail_content_view %}\n            <sw-card title="Fast Order Information" large>\n                <sw-container>\n\n                {% block fast_order_detail_comment_field %}\n                <sw-text-field\n                    v-model:value="fastOrder.comment"\n                    label="Comment"\n                />\n                {% endblock %}\n\n                </sw-container>\n\n            </sw-card>\n            {% endblock %}\n        </sw-card-view>\n\n    </template>\n    {% endblock %}\n\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[s.getByName("notification")],props:{fastOrderId:{type:String,required:!0}},data(){return{fastOrder:[],isLoading:!1,isSaveSuccessful:!1}},computed:{fastOrderRepository(){return this.repositoryFactory.create("fast_order")}},created(){this.getFastOrder()},methods:{getFastOrder:function(){this.fastOrderRepository.get(this.fastOrderId,Shopware.Context.api,new a).then(e=>{this.fastOrder=e})},saveFinish(){this.isSaveSuccessful=!1,this.isLoading=!1},async onSave(){return this.isLoading=!0,this.isSaveSuccessful=!1,this.fastOrderRepository.save(this.fastOrder).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.createNotificationSuccess({message:this.$tc("fast-order.detail.messageSaveSuccess")})}).catch(e=>{throw this.createNotificationError({message:this.$tc("fast-order.detail.messageSaveError")}),this.isLoading=!1,e})},onCancel(){this.$router.push({name:"fast.order.list"})}},metaInfo(){return{title:this.$createTitle()}}});var o=JSON.parse('{"fast-order":{"general":{"mainMenuItemGeneral":"Fast Order","descriptionTextModule":"Fast Order"},"list":{"contextMenuEdit":"Bearbeiten","contextMenuDelete":"L\xf6schen","buttonDelete":"L\xf6schen","buttonCancel":"Abbrechen","textDeleteConfirm":"M\xf6chten Sie diese Bestellung ({product}) wirklich l\xf6schen?"},"detail":{"buttonCancel":"Abbrechen","buttonSave":"Speichern","messageSaveError":"Kommentar konnte nicht gespeichert werden.","messageSaveSuccess":"Kommentar wurde erfolgreich gespeichert."}}}'),i=JSON.parse('{"fast-order":{"general":{"mainMenuItemGeneral":"Fast Order","descriptionTextModule":"Fast Order"},"list":{"contextMenuEdit":"Edit","contextMenuDelete":"Delete","buttonDelete":"Delete","buttonCancel":"Cancel","textDeleteConfirm":"Do you really want to delete this order ({product})?"},"detail":{"buttonCancel":"Cancel","buttonSave":"Save","messageSaveError":"Comment could not be saved.","messageSaveSuccess":"Comment has been saved."}}}');let{Module:l}=Shopware;Shopware.Module.register("fast-order",{type:"plugin",name:"FastOrder",title:"fast-order.general.mainMenuItemGeneral",description:"fast-order.general.descriptionTextModule",color:"#A092F0",icon:"default-shopping-paper-bag-product",snippets:{"de-DE":o,"en-GB":i},routes:{list:{component:"fast-order-list",path:"list"},detail:{component:"fast-order-detail",path:"detail/:id",props:{default:e=>({fastOrderId:e.params.id})}}},navigation:[{label:"Fast Order",color:"#A092F0",path:"fast.order.list",icon:"default-shopping-paper-bag-product",parent:"sw-order",position:100}]})}()})();
//# sourceMappingURL=fast-order-plugin.js.map